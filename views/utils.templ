package views

import "time"
import "supersolik/greed/pkg"

templ EditIndicator() {
	<span class="text-sm">*</span>
}

templ RecountAnchor() {
	<div
		hidden
		_="on load send recountItems to window then remove me end"
	>SHIT</div>
}

templ RefreshAnchor() {
	<div
		hidden
		_="on load send refreshContent to window then remove me end"
	>FUCK</div>
}

templ Page(content templ.Component) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<title>$$$ tracker</title>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<script src="https://cdn.tailwindcss.com/3.4.0"></script>
			<script src="https://unpkg.com/hyperscript.org@0.9.12"></script>
			<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
		</head>
		<body class="font-mono font-normal text-base">
			<header>
				<div class="flex flex-row p-3 items-baseline">
					<div class="mr-3 flex flex-col">
						<a class="text-lg font-medium" href="/">Greed by @SuperSolik</a>
						<div>
							{ time.Now().UTC().Format(greed.DATE_NICE_LAYOUT) }
						</div>
					</div>
					<div>
						<nav>
							<ul class="flex flex-row space-x-1.5">
								<li>
									<a
										_="on mouseenter toggle .uppercase until mouseleave"
										href="/accounts"
									>[Accounts]</a>
								</li>
								<li>
									<a
										_="on mouseenter toggle .uppercase until mouseleave"
										href="/transactions"
									>[Transactions]</a>
								</li>
							</ul>
						</nav>
					</div>
				</div>
			</header>
			@content
		</body>
		<script>
			function getTimeZone() {
				return Intl.DateTimeFormat().resolvedOptions().timeZone
			}

			function formatDateToLocal(date) {
				const d = typeof date === "string" ? new Date(date) : date;
				return d.toLocaleString(
					undefined,
					{
					  dateStyle: 'short',
					  timeStyle: 'short',
					}
				)
			}

			function convertTz(date, tzString) {
				return new Date((typeof date === "string" ? new Date(date) : date).toLocaleString("en-US", {timeZone: tzString}));   
			}

			function getInputDate(date) {
				return date.toISOString().split('T')[0];
			}

			function getInputTime(date){
				// Specify options for time formatting
				const options = {
				  hour: '2-digit',
				  minute: '2-digit',
				  hour12: false  // Use 24-hour format
				};

				// Format the Date object as a time string
				return date.toLocaleTimeString('en-US', options);
			}

		</script>
	</html>
}
